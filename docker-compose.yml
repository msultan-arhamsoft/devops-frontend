version: "3"

# Define the services for the app
services:   
  nginx:
    depends_on:
      - backend
      - frontend
    restart: always # because it is routing traffic to the entire app
    image: nginx
    volumes:
      - "./nginx/default.conf:/etc/nginx/conf.d/default.conf"
    ports:
      - '80:80'
    networks:
      - frontend-todo
      - backend-todo

  # frontend service serves the frontend of the application
  frontend:
    image: mahmoodsultan/devops-frontend:phase1
    init: true
    restart: always
    env_file:
      - ./.env
    environment:
      REACT_APP_API_URL: ${API_URL}
    command: npm run start
    #in order to reflect the code changes into the docker server
    volumes:
      - ./:/app
      - /app/node_modules
    links:
      - backend
    networks:
      - frontend-todo

  # backend service serves the backend of the application
  backend:
    #build the images (if not present already) before starting the app
    image: mahmoodsultan/devops-backend:phase1
    init: true
    restart: always
    depends_on:
      - mongo
    env_file:
      - ./.env
    environment:
      MONGO_URI: ${MONGO_URI}
      NODE_ENV: ${NODE_ENV}
      TODO_PORT: ${TODO_PORT}
    networks:
      - backend-todo
    #in order to reflect the code changes into the docker server
    volumes:
      - ./../devops-todos:/app/
      - /app/node_modules
    links:
      - mongo
  #database service to store the databae of the application
  mongo:
    image: mongo
    restart: always
    env_file: ./.env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    #persist the data of the application when the container is down
    volumes:
      - mongodb:/data/db
    networks:
      - backend-todo

networks:
  frontend-todo:
    name: frontend-todo
  backend-todo:
    name: backend-todo

volumes:
    mongodb: